experiment_name: 'baseline'

dataset: 'chembl'
num_epochs: 1000
batch_size: 128
log_iterations: 30
patience: 30
loss_func: BCEWithLogitsLoss
required_data:
  - dgl_graph
metrics:
  - rsquared
  - mean_predictor_loss
  - pearsonr
optimizer: Adam
optimizer_params:
  lr: 1.0e-4
collate_function: masked_collate

scheduler_step_per_batch: False
lr_scheduler: WarmUpWrapper
lr_scheduler_params:
  warmup_steps: [1500]
  interpolation: 'linear'
  # parameters of scheduler to run after warmup
  wrapped_scheduler: ReduceLROnPlateau
  factor: 0.5
  patience: 25
  min_lr: 5.0e-6
  mode: 'max'
  verbose: True

# Model parameters
model_type: 'ELECTRA'
model_parameters:
  generator_args:
    hidden_dim: 128
    pna_args:
      target_dim: 1
      hidden_dim: 128
      mid_batch_norm: True
      last_batch_norm: True
      readout_batchnorm: True
      # e^(log(forgetfulness ~0.001)/number of steps per epoch) = batch_norm_momentum   =>  e^(log(0.001)/100) = 0.970
      batch_norm_momentum: 0.96
      readout_hidden_dim: 128
      readout_layers: 2
      dropout: 0.0
      propagation_depth: 6
      aggregators:
        - mean
        - max
        - min
        - std
      scalers:
        - identity
        - amplification
        - attenuation
      readout_aggregators:
        - min
        - max
        - mean
        - sum
      pretrans_layers: 2
      posttrans_layers: 1
      residual: True
  discriminator_args:
    pna_args:
      target_dim: 1
      hidden_dim: 128
      mid_batch_norm: True
      last_batch_norm: True
      readout_batchnorm: True
      # e^(log(forgetfulness ~0.001)/number of steps per epoch) = batch_norm_momentum   =>  e^(log(0.001)/100) = 0.970
      batch_norm_momentum: 0.96
      readout_hidden_dim: 128
      readout_layers: 2
      dropout: 0.0
      propagation_depth: 6
      aggregators:
        - mean
        - max
        - min
        - std
      scalers:
        - identity
        - amplification
        - attenuation
      readout_aggregators:
        - min
        - max
        - mean
        - sum
      pretrans_layers: 2
      posttrans_layers: 1
      residual: True


# continue training from checkpoint:
#checkpoint: runs/PNAReadout_2_layer_03-04_15-29-07/last_checkpoint.pt